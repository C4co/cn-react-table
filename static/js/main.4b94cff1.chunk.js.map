{"version":3,"sources":["../../src/component/Table.style.tsx","../../src/component/Table.tsx","../../src/component/helpers.ts","App.tsx","example.ts","index.tsx"],"names":["Main","styled","Container","darken","props","css","String","Content","Head","Footer","Title","Body","Item","rgba","Col","Select","Controls","PageIndicator","PageButton","Table","labels","Object","useState","selectedItems","setSelectedItems","Set","Array","useEffect","setTableItems","arr","chunkSize","R","i","len","chunk","maxHeight","React","selectAll","Boolean","onClick","undefined","key","index","tableItems","selected","clonedItems","toggleSelection","item","footer","toggleAllItems","page","setPage","limitOfItems","data","items","from","keys","Image","img","Wrapper","div","forEach","push","src","Faker","image","avatar","name","findName","internet","email","phone","phoneNumber","address","city","company","companyName","commerce","department","App","lang","theme","code","dynamicTable","onSelectItems","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b94cff1.chunk.js","sourcesContent":["import styled, { css } from 'styled-components'\r\nimport { darken, rgba } from \"polished\"\r\n\r\nconst BASE_COLOR = \"#FFFFFF\";\r\nconst PRIMARY_COLOR = \"#0e60dc\";\r\n\r\ntype ContainerProps = {\r\n  maxHeight?: Number\r\n}\r\n\r\nexport const Main = styled.div`\r\n  width: 100%;\r\n  background-color: ${BASE_COLOR};\r\n`\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  border: solid ${darken(0.15, BASE_COLOR)} 1px;\r\n  font-size: 1em;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  ${props => props.maxHeight && css`\r\n    max-height: ${String(props.maxHeight)}px;\r\n  `}\r\n`\r\n\r\nexport const Content = styled.table`\r\n  font-family: inherit;\r\n  width: 100%;\r\n  background-color: ${BASE_COLOR};\r\n  border-spacing: 0px;\r\n  margin: 0 auto;\r\n  border-collapse: separate;\r\n  font-size: 0.9em;\r\n  position: relative;\r\n`\r\n\r\nexport const Head = styled.thead`\r\n  width: 100%;\r\n  top: 0;\r\n`\r\n\r\nexport const Footer = styled.tfoot`\r\n  width: 100%;\r\n  top: 0;\r\n`\r\n\r\ntype TitleProps = {\r\n  footer?: boolean\r\n}\r\n\r\nexport const Title = styled.th<TitleProps>`\r\n  padding: 10px;\r\n  border-bottom: solid ${darken(0.15, BASE_COLOR)} 1px;\r\n  position: sticky;\r\n  top: 0;\r\n  text-align: left;\r\n  background: ${BASE_COLOR};\r\n  z-index: 1000;\r\n  color: ${darken(1, BASE_COLOR)};\r\n\r\n  ${props => props.footer && css`\r\n    bottom: 0px;\r\n    border-bottom: none;\r\n    border-top: solid ${darken(0.15, BASE_COLOR)} 1px;\r\n  `}\r\n`\r\n\r\nexport const Body = styled.tbody`\r\n  width: 100%;\r\n`\r\n\r\ntype ItemProps = {\r\n  selected?: boolean\r\n}\r\n\r\nexport const Item = styled.tr<ItemProps>`\r\n  color: ${darken(0.7, BASE_COLOR)};\r\n  width: 100%;\r\n\r\n  &:nth-child(even) {\r\n    background-color: ${darken(0.04, BASE_COLOR)};\r\n  }\r\n\r\n  ${props => props.selected && css`\r\n    background-color: ${rgba(PRIMARY_COLOR, 0.15)} !important;\r\n    color: ${darken(1, BASE_COLOR)};\r\n  `}\r\n`\r\n\r\ntype ColProps = {\r\n  selected?: boolean\r\n}\r\n\r\nexport const Col = styled.td<ColProps>`\r\n  padding: 8px 10px;\r\n  border-right: solid ${darken(0.15, BASE_COLOR)} 1px;\r\n\r\n  &:last-child{\r\n    border-right: none;\r\n  }\r\n\r\n  ${props => props.selected && css`\r\n    border-right: solid ${rgba(PRIMARY_COLOR, 0.4)} 1px;\r\n  `}\r\n`\r\n\r\ntype SelectProps = {\r\n  selected?: boolean\r\n  selectAll?: boolean\r\n}\r\n\r\nexport const Select = styled.div<SelectProps>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border: solid ${darken(0.4, BASE_COLOR)} 2px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 30px;\r\n\r\n  ${props => props.selectAll && css `\r\n    background: ${PRIMARY_COLOR};\r\n    border: solid ${PRIMARY_COLOR} 2px;\r\n\r\n    &:before {\r\n      content: \" \";\r\n      width: 8px;\r\n      height: 3px;\r\n      background: ${BASE_COLOR};\r\n    }\r\n  `}\r\n\r\n  ${props => props.selected && css `\r\n    background: ${PRIMARY_COLOR};\r\n    border: solid ${PRIMARY_COLOR} 2px;\r\n  `}\r\n`\r\n\r\n// Controls\r\n\r\nexport const Controls = styled.footer`\r\n  padding: 5px;\r\n  position: relative;\r\n  top: -1px;\r\n  display: flex;\r\n  gap: 20px;\r\n  border: solid ${darken(0.15, BASE_COLOR)} 1px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const PageIndicator = styled.span`\r\n  font-weight: bold;\r\n  color: black;\r\n`\r\n\r\nexport const PageButton = styled.button`\r\n  height: 36px;\r\n  width: 36px;\r\n  padding-bottom: 3px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  border-radius: 30px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: white;\r\n  border: solid ${darken(0.3, BASE_COLOR)} 1px;\r\n`\r\n","import React, { useState, useEffect } from 'react'\nimport * as S from './Table.style'\nimport { CNTableProps } from './Table.type'\nimport { chunk } from './helpers'\n\nexport function Table(props: CNTableProps){\n  const labels = Object.keys(props.data[0])\n  const [selectedItems, setSelectedItems] = useState(new Set())\n  const [page, setPage] = useState(0)\n  const [tableItems, setTableItems] = useState<Array<Array<any>>>([[]])\n\n  useEffect(() => {\n    if(props.onSelectItems){\n      props.onSelectItems(Array.from(selectedItems))\n    }\n\n    setTableItems(chunk(props.data, props.limitOfItems))\n  }, [])\n\n  function toggleSelection(item: any){\n    const clonedItems = selectedItems\n\n    if(selectedItems.has(item)){\n      clonedItems.delete(item)\n\n      setSelectedItems(new Set([...Array.from(clonedItems)]))\n    }else{\n      setSelectedItems(new Set([...Array.from(clonedItems)]).add(item))\n    }\n  }\n\n  function toggleAllItems(){\n    if(selectedItems.size){\n      setSelectedItems(new Set())\n    }else{\n      setSelectedItems(new Set([...Array.from(props.data)]))\n    }\n  }\n\n  function prevPage(){\n    if(page > 0){\n      setPage(page - 1)\n    }\n  }\n\n  function nextPage(){\n    if(page < (tableItems.length - 1)){\n      setPage(page + 1)\n    }\n  }\n\n  return (\n    <S.Main>\n      <S.Container maxHeight={props.maxHeigth || 0}>\n        <S.Content>\n\n          <S.Head>\n            <tr>\n              {\n                props.dynamicTable &&\n                <S.Title>\n                  <S.Select\n                    selectAll={Boolean(selectedItems.size)}\n                    onClick={props.dynamicTable ? toggleAllItems : undefined}\n                  />\n                </S.Title>\n              }\n\n              {\n                labels.map((label, index) => {\n                  return(\n                    <S.Title key={index}> { label } </S.Title>\n                  )\n                })\n              }\n            </tr>\n          </S.Head>\n\n          <S.Body>\n            { tableItems[page].map((element: any, index: any) => {\n              return (\n                <S.Item\n                  selected={selectedItems.has(element)}\n                  onClick={props.dynamicTable ? () => {toggleSelection(element)} : undefined}\n                  key={index}\n                >\n\n                  {\n                    props.dynamicTable &&\n                    <S.Col selected={selectedItems.has(element)}>\n                      <S.Select selected={selectedItems.has(element)} />\n                    </S.Col>\n                  }\n\n                  {\n                    Object.entries(element).map((item: any, index: any) => {\n                      return (\n                        <S.Col\n                          selected={selectedItems.has(element)}\n                          data-label={item[0] + \":\"}\n                          key={index}\n                        >\n                          { item[1] }\n                        </S.Col>\n                      )\n                    })\n                  }\n\n                </S.Item>\n                )\n              })\n            }\n          </S.Body>\n\n          <S.Footer>\n            <tr>\n              {\n                props.dynamicTable &&\n                <S.Title footer>\n                  <S.Select\n                    selectAll={Boolean(selectedItems.size)}\n                    onClick={toggleAllItems}\n                  />\n                </S.Title>\n              }\n\n              {\n                labels.map((label, index) => {\n                  return(\n                    <S.Title footer key={index}> { label } </S.Title>\n                  )\n                })\n              }\n            </tr>\n          </S.Footer>\n\n        </S.Content>\n      </S.Container>\n\n      <S.Controls>\n        <S.PageButton onClick={ prevPage }> {'«'} </S.PageButton>\n          <S.PageIndicator> { page + 1 } / { tableItems.length } </S.PageIndicator>\n        <S.PageButton onClick={ nextPage }> {'»'} </S.PageButton>\n      </S.Controls>\n\n    </S.Main>\n  )\n}\n\nTable.defaultProps = {\n  limitOfItems: 25\n}\n","export function chunk(arr: Array<any>, chunkSize: any | undefined) {\n  if (chunkSize <= 0) throw \"Invalid chunk size\";\n  var R = [];\n  for (var i = 0, len = arr.length; i < len; i += chunkSize)\n    R.push(arr.slice(i, i + chunkSize));\n  return R;\n}\n","import React from 'react'\nimport { Table } from 'cn-react-table'\nimport Faker from \"faker\"\nimport styled from \"styled-components\"\nimport { Coda } from \"cn-react-coda\"\nimport { EXAMPLE } from './example'\n\nconst data: Object[] = []\nconst items: number[] = [...Array.from(Array(1000).keys())]\n\nconst Image = styled.img`\n  border-radius: 200px;\n  width: 40px;\n  height: 40px;\n`\n\nconst Wrapper = styled.div`\n  padding: 50px 10px;\n  max-width: 1200px;\n  margin: 0 auto;\n`\n\nitems.forEach(() => {\n  data.push({\n    \"Avatar\": <Image src={Faker.image.avatar()}/>,\n    \"Name\": <b> {Faker.name.findName()} </b>,\n    \"Email\": Faker.internet.email(),\n    \"Phone\": Faker.phone.phoneNumber(),\n    \"City\": Faker.address.city(),\n    \"Company\": Faker.company.companyName(),\n    \"Commerce\": Faker.commerce.department()\n  })\n})\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <h2> Basic table </h2>\n      <br/>\n\n      <Table data={data} />\n\n      <br/>\n\n      <Coda lang=\"javascript\" theme=\"dark\" code={EXAMPLE} />\n\n      <br/><br/><br/><br/><br/>\n\n      <h2> Dynamic Table </h2>\n\n      <br/>\n\n      <Table data={data} dynamicTable onSelectItems={(items: any) => { console.log(items) }} />\n    </Wrapper>\n  )\n}\n\nexport default App\n","export const EXAMPLE = `\nimport React from 'react'\nimport { Table } from 'cn-react-table'\nimport Faker from 'faker'\nimport styled from 'styled-components'\n\nconst data: Object[] = []\nconst items: number[] = [...Array.from(Array(1000).keys())]\n\nconst Image = styled.img\\`\n  border-radius: 200px;\n  width: 40px;\n  height: 40px;\n\\`\n\nitems.forEach(() => {\n  data.push({\n    \"Avatar\": <Image src={Faker.image.avatar()}/>,\n    \"Name\": <b> {Faker.name.findName()} </b>,\n    \"Email\": Faker.internet.email(),\n    \"Phone\": Faker.phone.phoneNumber(),\n    \"City\": Faker.address.city(),\n    \"Company\": Faker.company.companyName(),\n    \"Commerce\": Faker.commerce.department()\n  })\n})\n\nfunction App(){\n  return (\n    // cn-react-table\n    <Table data={data} />\n  )\n}\n`\n","import 'typeface-inter'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './app.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}